{"ast":null,"code":"var _jsxFileName = \"/Users/yashsingh/Downloads/netflix-master/src/Components/RowPost/RowPost.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState, useContext } from 'react'\n// import axios from '../../axios'\n// import './RowPost.css'\n// import { useNavigate } from 'react-router-dom';\n// import { imageUrl ,API_KEY} from '../../Constants/Constants'\n// import Youtube from 'react-youtube'\n// function RowPost(props) {\n\n//   const [movie, setmovie] = useState([])\n//   const navigate = useNavigate()\n//   const [urlId, seturlId] = useState('')\n//   const DetailsHandler = (data) => {\n\n//     navigate('/About', { data })\n//   }\n\n//   useEffect(() => {\n\n//     axios.get(props.url).then(response => {\n//       setmovie(response.data.results)\n\n//     }).catch(err => {\n//       alert()\n//     })\n//   }, [])\n//   const opts = {\n//     height: '390',\n//     width: '100%',\n//     playerVars: {\n//       autoplay: 1,\n//     }\n//   }\n//   const HandleMovie = (id) => {\n//     axios.get(`/movie/${id}/videos?api_key=${API_KEY}&language=en-US`).then(response => {\n//       if(response.data.results.length!==0){\n//         seturlId(response.data.results[0])\n//       }else{\n//         alert('Currently Unavilable')\n//       }\n//     })\n//   }\n//   return (\n//     <div className='row'>\n//       <h2>{props.title}</h2>\n//       <div className='posters'>\n//         {movie.map((obj) =>\n//           <img onClick={() => HandleMovie(obj.id)} key={obj.id} className='poster' src={`${imageUrl + obj.poster_path}`} alt=\"Poster\" />\n//         )}\n//       </div>\n//      {urlId &&  <Youtube opts={opts} videoId={urlId.key}></Youtube>}\n//     </div>\n//   )\n\n// }\n\n// export default RowPost\n\nimport React, { useEffect, useState } from 'react';\nimport './RowPost.css';\nimport { useNavigate } from 'react-router-dom';\nimport { imageUrl } from '../../Constants/Constants';\nimport Youtube from 'react-youtube';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RowPost({\n  title\n}) {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [urlId, setUrlId] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    const storedMovies = localStorage.getItem('movies');\n    if (storedMovies) {\n      try {\n        const parsedMovies = JSON.parse(storedMovies);\n        if (Array.isArray(parsedMovies)) {\n          setMovies(parsedMovies);\n        } else {\n          console.error('Invalid movies format in localStorage');\n        }\n      } catch (error) {\n        console.error('Error parsing movies from localStorage:', error);\n      }\n    }\n  }, []);\n  const opts = {\n    height: '390',\n    width: '100%',\n    playerVars: {\n      autoplay: 1\n    }\n  };\n  const handleMovieClick = movie => {\n    if (movie.trailerKey) {\n      setUrlId(movie.trailerKey);\n    } else {\n      alert('Trailer currently unavailable');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posters\",\n      children: movies.map(movie => movie.poster_path ? /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => handleMovieClick(movie),\n        className: \"poster\",\n        src: `${imageUrl}${movie.poster_path}`,\n        alt: movie.title || 'Movie Poster'\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this) : null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), urlId && /*#__PURE__*/_jsxDEV(Youtube, {\n      opts: opts,\n      videoId: urlId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n_s(RowPost, \"uuL1zAECKreTCdPdMxAbgWmtX8E=\", false, function () {\n  return [useNavigate];\n});\n_c = RowPost;\nexport default RowPost;\nvar _c;\n$RefreshReg$(_c, \"RowPost\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","imageUrl","Youtube","jsxDEV","_jsxDEV","RowPost","title","_s","movies","setMovies","urlId","setUrlId","navigate","storedMovies","localStorage","getItem","parsedMovies","JSON","parse","Array","isArray","console","error","opts","height","width","playerVars","autoplay","handleMovieClick","movie","trailerKey","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","poster_path","onClick","src","alt","id","videoId","_c","$RefreshReg$"],"sources":["/Users/yashsingh/Downloads/netflix-master/src/Components/RowPost/RowPost.js"],"sourcesContent":["// import React, { useEffect, useState, useContext } from 'react'\n// import axios from '../../axios'\n// import './RowPost.css'\n// import { useNavigate } from 'react-router-dom';\n// import { imageUrl ,API_KEY} from '../../Constants/Constants'\n// import Youtube from 'react-youtube'\n// function RowPost(props) {\n\n\n\n//   const [movie, setmovie] = useState([])\n//   const navigate = useNavigate()\n//   const [urlId, seturlId] = useState('')\n//   const DetailsHandler = (data) => {\n\n//     navigate('/About', { data })\n//   }\n\n//   useEffect(() => {\n\n//     axios.get(props.url).then(response => {\n//       setmovie(response.data.results)\n\n//     }).catch(err => {\n//       alert()\n//     })\n//   }, [])\n//   const opts = {\n//     height: '390',\n//     width: '100%',\n//     playerVars: {\n//       autoplay: 1,\n//     }\n//   }\n//   const HandleMovie = (id) => {\n//     axios.get(`/movie/${id}/videos?api_key=${API_KEY}&language=en-US`).then(response => {\n//       if(response.data.results.length!==0){\n//         seturlId(response.data.results[0])\n//       }else{\n//         alert('Currently Unavilable')\n//       }\n//     })\n//   }\n//   return (\n//     <div className='row'>\n//       <h2>{props.title}</h2>\n//       <div className='posters'>\n//         {movie.map((obj) =>\n//           <img onClick={() => HandleMovie(obj.id)} key={obj.id} className='poster' src={`${imageUrl + obj.poster_path}`} alt=\"Poster\" />\n//         )}\n//       </div>\n//      {urlId &&  <Youtube opts={opts} videoId={urlId.key}></Youtube>}\n//     </div>\n//   )\n\n// }\n\n// export default RowPost\n\nimport React, { useEffect, useState } from 'react';\nimport './RowPost.css';\nimport { useNavigate } from 'react-router-dom';\nimport { imageUrl } from '../../Constants/Constants';\nimport Youtube from 'react-youtube';\n\nfunction RowPost({ title }) {\n  const [movies, setMovies] = useState([]);\n  const [urlId, setUrlId] = useState('');\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const storedMovies = localStorage.getItem('movies');\n    if (storedMovies) {\n      try {\n        const parsedMovies = JSON.parse(storedMovies);\n        if (Array.isArray(parsedMovies)) {\n          setMovies(parsedMovies);\n        } else {\n          console.error('Invalid movies format in localStorage');\n        }\n      } catch (error) {\n        console.error('Error parsing movies from localStorage:', error);\n      }\n    }\n  }, []);\n\n  const opts = {\n    height: '390',\n    width: '100%',\n    playerVars: {\n      autoplay: 1,\n    }\n  };\n\n  const handleMovieClick = (movie) => {\n    if (movie.trailerKey) {\n      setUrlId(movie.trailerKey);\n    } else {\n      alert('Trailer currently unavailable');\n    }\n  };\n\n  return (\n    <div className='row'>\n      <h2>{title}</h2>\n      <div className='posters'>\n        {movies.map((movie) =>\n          movie.poster_path ? (\n            <img\n              key={movie.id}\n              onClick={() => handleMovieClick(movie)}\n              className='poster'\n              src={`${imageUrl}${movie.poster_path}`}\n              alt={movie.title || 'Movie Poster'}\n            />\n          ) : null\n        )}\n      </div>\n      {urlId && <Youtube opts={opts} videoId={urlId} />}\n    </div>\n  );\n}\n\nexport default RowPost;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,eAAe;AACtB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,QAAQ,QAAQ,2BAA2B;AACpD,OAAOC,OAAO,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,OAAOA,CAAC;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EAC1B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMa,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd,MAAMe,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IACnD,IAAIF,YAAY,EAAE;MAChB,IAAI;QACF,MAAMG,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACL,YAAY,CAAC;QAC7C,IAAIM,KAAK,CAACC,OAAO,CAACJ,YAAY,CAAC,EAAE;UAC/BP,SAAS,CAACO,YAAY,CAAC;QACzB,CAAC,MAAM;UACLK,OAAO,CAACC,KAAK,CAAC,uCAAuC,CAAC;QACxD;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;MACjE;IACF;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,IAAI,GAAG;IACXC,MAAM,EAAE,KAAK;IACbC,KAAK,EAAE,MAAM;IACbC,UAAU,EAAE;MACVC,QAAQ,EAAE;IACZ;EACF,CAAC;EAED,MAAMC,gBAAgB,GAAIC,KAAK,IAAK;IAClC,IAAIA,KAAK,CAACC,UAAU,EAAE;MACpBnB,QAAQ,CAACkB,KAAK,CAACC,UAAU,CAAC;IAC5B,CAAC,MAAM;MACLC,KAAK,CAAC,+BAA+B,CAAC;IACxC;EACF,CAAC;EAED,oBACE3B,OAAA;IAAK4B,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB7B,OAAA;MAAA6B,QAAA,EAAK3B;IAAK;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChBjC,OAAA;MAAK4B,SAAS,EAAC,SAAS;MAAAC,QAAA,EACrBzB,MAAM,CAAC8B,GAAG,CAAET,KAAK,IAChBA,KAAK,CAACU,WAAW,gBACfnC,OAAA;QAEEoC,OAAO,EAAEA,CAAA,KAAMZ,gBAAgB,CAACC,KAAK,CAAE;QACvCG,SAAS,EAAC,QAAQ;QAClBS,GAAG,EAAE,GAAGxC,QAAQ,GAAG4B,KAAK,CAACU,WAAW,EAAG;QACvCG,GAAG,EAAEb,KAAK,CAACvB,KAAK,IAAI;MAAe,GAJ9BuB,KAAK,CAACc,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKd,CAAC,GACA,IACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,EACL3B,KAAK,iBAAIN,OAAA,CAACF,OAAO;MAACqB,IAAI,EAAEA,IAAK;MAACqB,OAAO,EAAElC;IAAM;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEV;AAAC9B,EAAA,CAxDQF,OAAO;EAAA,QAGGL,WAAW;AAAA;AAAA6C,EAAA,GAHrBxC,OAAO;AA0DhB,eAAeA,OAAO;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}