{"ast":null,"code":"var _jsxFileName = \"/Users/yashsingh/Downloads/netflix-master/src/Components/Banner/Banner.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import \"./Banner.css\";\n\n// const Banner = () => {\n//     const [movie, setMovie] = useState(null);\n\n//     useEffect(() => {\n//         fetch(\"/data/movies.json\")  // Fetch local JSON file\n//             .then((response) => response.json())\n//             .then((data) => {\n//                 const x = Math.floor(Math.random() * data.results.length);\n//                 setMovie(data.results[x]); // Pick a random movie\n//             })\n//             .catch((error) => console.error(\"Error loading JSON:\", error));\n//     }, []);\n\n//     return (\n//         <div\n//             style={{ backgroundImage: `url(${movie ? movie.backdrop_path : \"\"})` }}\n//             className=\"banner\"\n//         >\n//             <div className=\"fade_content\">\n//                 <div className=\"content\">\n//                     <h1 className=\"title\">{movie ? movie.title || movie.name : \"No Title\"}</h1>\n//                     <div className=\"banner_buttons\">\n//                         <button className=\"button\"><i className=\"fa fa-play\"></i>Play</button>\n//                         <button className=\"button\"><i className=\"fa fa-bars\"></i>My List</button>\n//                     </div>\n//                     <h1 className=\"description\">{movie ? movie.overview : \"No Description\"}</h1>\n//                 </div>\n//             </div>\n//             <div className=\"fade-bottom\"></div>\n//         </div>\n//     );\n// };\n\n// export default Banner;\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./Banner.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Banner = () => {\n  _s();\n  const [movie, setMovie] = useState(null);\n  useEffect(() => {\n    fetch(\"/data/movies.json?nocache=\" + new Date().getTime()) // Prevent cache issues\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      return response.json();\n    }).then(data => {\n      if (!data || !data.results || data.results.length === 0) {\n        throw new Error(\"JSON data is empty or incorrect.\");\n      }\n      const randomMovie = data.results[Math.floor(Math.random() * data.results.length)];\n      setMovie(randomMovie);\n    }).catch(error => console.error(\"Error loading JSON:\", error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundImage: `url(${movie ? movie.backdrop_path : \"\"})`\n    },\n    className: \"banner\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fade_content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title\",\n          children: movie ? movie.title || movie.name : \"No Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"banner_buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-play\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 52\n            }, this), \"Play\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-bars\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 52\n            }, this), \"My List\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"description\",\n          children: movie ? movie.overview : \"No Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fade-bottom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(Banner, \"7wu+QzjZ74tlUVCwDf4wnQTtbPA=\");\n_c = Banner;\nexport default Banner;\nvar _c;\n$RefreshReg$(_c, \"Banner\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Banner","_s","movie","setMovie","fetch","Date","getTime","then","response","ok","Error","status","json","data","results","length","randomMovie","Math","floor","random","catch","error","console","style","backgroundImage","backdrop_path","className","children","title","name","fileName","_jsxFileName","lineNumber","columnNumber","overview","_c","$RefreshReg$"],"sources":["/Users/yashsingh/Downloads/netflix-master/src/Components/Banner/Banner.js"],"sourcesContent":["\n\n// import React, { useEffect, useState } from \"react\";\n// import \"./Banner.css\";\n\n// const Banner = () => {\n//     const [movie, setMovie] = useState(null);\n\n//     useEffect(() => {\n//         fetch(\"/data/movies.json\")  // Fetch local JSON file\n//             .then((response) => response.json())\n//             .then((data) => {\n//                 const x = Math.floor(Math.random() * data.results.length);\n//                 setMovie(data.results[x]); // Pick a random movie\n//             })\n//             .catch((error) => console.error(\"Error loading JSON:\", error));\n//     }, []);\n\n//     return (\n//         <div\n//             style={{ backgroundImage: `url(${movie ? movie.backdrop_path : \"\"})` }}\n//             className=\"banner\"\n//         >\n//             <div className=\"fade_content\">\n//                 <div className=\"content\">\n//                     <h1 className=\"title\">{movie ? movie.title || movie.name : \"No Title\"}</h1>\n//                     <div className=\"banner_buttons\">\n//                         <button className=\"button\"><i className=\"fa fa-play\"></i>Play</button>\n//                         <button className=\"button\"><i className=\"fa fa-bars\"></i>My List</button>\n//                     </div>\n//                     <h1 className=\"description\">{movie ? movie.overview : \"No Description\"}</h1>\n//                 </div>\n//             </div>\n//             <div className=\"fade-bottom\"></div>\n//         </div>\n//     );\n// };\n\n// export default Banner;\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./Banner.css\";\n\nconst Banner = () => {\n    const [movie, setMovie] = useState(null);\n\n    useEffect(() => {\n        fetch(\"/data/movies.json?nocache=\" + new Date().getTime()) // Prevent cache issues\n            .then((response) => {\n                if (!response.ok) {\n                    throw new Error(`HTTP error! Status: ${response.status}`);\n                }\n                return response.json();\n            })\n            .then((data) => {\n                if (!data || !data.results || data.results.length === 0) {\n                    throw new Error(\"JSON data is empty or incorrect.\");\n                }\n                const randomMovie = data.results[Math.floor(Math.random() * data.results.length)];\n                setMovie(randomMovie);\n            })\n            .catch((error) => console.error(\"Error loading JSON:\", error));\n    }, []);\n\n    return (\n        <div\n            style={{ backgroundImage: `url(${movie ? movie.backdrop_path : \"\"})` }}\n            className=\"banner\"\n        >\n            <div className=\"fade_content\">\n                <div className=\"content\">\n                    <h1 className=\"title\">{movie ? movie.title || movie.name : \"No Title\"}</h1>\n                    <div className=\"banner_buttons\">\n                        <button className=\"button\"><i className=\"fa fa-play\"></i>Play</button>\n                        <button className=\"button\"><i className=\"fa fa-bars\"></i>My List</button>\n                    </div>\n                    <h1 className=\"description\">{movie ? movie.overview : \"No Description\"}</h1>\n                </div>\n            </div>\n            <div className=\"fade-bottom\"></div>\n        </div>\n    );\n};\n\nexport default Banner;"],"mappings":";;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACZQ,KAAK,CAAC,4BAA4B,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC;IAAA,CACtDC,IAAI,CAAEC,QAAQ,IAAK;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,uBAAuBF,QAAQ,CAACG,MAAM,EAAE,CAAC;MAC7D;MACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDL,IAAI,CAAEM,IAAI,IAAK;MACZ,IAAI,CAACA,IAAI,IAAI,CAACA,IAAI,CAACC,OAAO,IAAID,IAAI,CAACC,OAAO,CAACC,MAAM,KAAK,CAAC,EAAE;QACrD,MAAM,IAAIL,KAAK,CAAC,kCAAkC,CAAC;MACvD;MACA,MAAMM,WAAW,GAAGH,IAAI,CAACC,OAAO,CAACG,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGN,IAAI,CAACC,OAAO,CAACC,MAAM,CAAC,CAAC;MACjFZ,QAAQ,CAACa,WAAW,CAAC;IACzB,CAAC,CAAC,CACDI,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC,CAAC;EACtE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACItB,OAAA;IACIwB,KAAK,EAAE;MAAEC,eAAe,EAAE,OAAOtB,KAAK,GAAGA,KAAK,CAACuB,aAAa,GAAG,EAAE;IAAI,CAAE;IACvEC,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBAElB5B,OAAA;MAAK2B,SAAS,EAAC,cAAc;MAAAC,QAAA,eACzB5B,OAAA;QAAK2B,SAAS,EAAC,SAAS;QAAAC,QAAA,gBACpB5B,OAAA;UAAI2B,SAAS,EAAC,OAAO;UAAAC,QAAA,EAAEzB,KAAK,GAAGA,KAAK,CAAC0B,KAAK,IAAI1B,KAAK,CAAC2B,IAAI,GAAG;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC3ElC,OAAA;UAAK2B,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC3B5B,OAAA;YAAQ2B,SAAS,EAAC,QAAQ;YAAAC,QAAA,gBAAC5B,OAAA;cAAG2B,SAAS,EAAC;YAAY;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,QAAI;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACtElC,OAAA;YAAQ2B,SAAS,EAAC,QAAQ;YAAAC,QAAA,gBAAC5B,OAAA;cAAG2B,SAAS,EAAC;YAAY;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,WAAO;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxE,CAAC,eACNlC,OAAA;UAAI2B,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAEzB,KAAK,GAAGA,KAAK,CAACgC,QAAQ,GAAG;QAAgB;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3E;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACNlC,OAAA;MAAK2B,SAAS,EAAC;IAAa;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEd,CAAC;AAAChC,EAAA,CAvCID,MAAM;AAAAmC,EAAA,GAANnC,MAAM;AAyCZ,eAAeA,MAAM;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}